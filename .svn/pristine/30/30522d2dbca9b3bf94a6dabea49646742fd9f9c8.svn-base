var category = function ($,layui) {
    function init() {
        showTree();
        // 新增确认
        layui.use(['table','form','element','laypage','layer'], function(){
            var table=layui.table
                ,form=layui.form
                ,element=layui.elemengt
                ,laypage = layui.laypage
                ,layer=layui.layer;

            //展示已知数据
            table.render({
                elem: '#content-category'
                ,url:context +'/callCategory/data.do'  //数据请求路径
                ,id:'category'//初始化标识id
                , cols: [[ //标题栏
                    {type: 'checkbox'}
                    , {field: 'name', title: '分类名称', width: 220,}
                    , {field: 'descri', title: '分类描述', minWidth: 350}
                    , {field: 'right', title: '操作', width: 180, align: 'center', toolbar: '#bar-category'}
                ]]
                ,skin: 'row' //表格风格
                ,even: true
                ,page: true //是否显示分页
                // ,limits: [5, 7, 10]
                //,limit: 5 //每页默认显示的数量
                ,jump: function(obj) {
                    console.log(obj)
                }
            });
            var $ = layui.$, active = {
                reload: function(){
                    var name = $('#keyword');
                    table.reload('category', {
                        where: {
                            key: {
                                name: $.trim(name.val()),
                            }
                        }
                    });
                }
            };
            $('#search').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
            //监听工具条
            table.on('tool(demo)', function(obj){
                var data = obj.data //获得当前行数据
                    ,layEvent = obj.event; //获得 lay-event 对应的值
                if(layEvent === 'del'){
                    layer.confirm('真的删除行么', function(index){
                        $.ajax({
                            type: "post",
                            url:context +"/callCategory/delete.do",
                            data: {
                                "callCategoryIds":data.id
                            },
                            success: function (suc) {
                                if(suc.status==0){
                                    layer.msg(suc.message);
                                    window.location.href =context +"/callCategory/list.do"
                                }else{
                                    layer.msg(suc.message);
                                }
                            }
                        });
                    });
                } else if(layEvent === 'edit'){
                    console.log('编辑行：<br>'+ JSON.stringify(data))
                    //向模态框中赋值
                    $("#id").val(data.id);
                    $("#name").val(data.name);
                    $("#descri").val(data.descri);
                    $('#edit').modal('show')
                }
            });
        });
        //添加操作
        $('#addSubmit').on('click', function () {
            var $form = $("#addForm");
            var params = $form.serialize();
            $.ajax({
                type: "GET",
                url: context +"/callCategory/add.do",
                data: params,
                success: function (suc) {
                    if(suc.status==0){
                        layer.msg(suc.message);
                        window.location.href =context +"/callCategory/list.do"
                    }else{
                        layer.msg(suc.message);
                    }
                }
            });
        });
        //批量删除操作
        $('#delSubmit').on('click', function () {
            layui.use('table', function() {
                var table = layui.table;
                var checkStatus = table.checkStatus('category')
                    , data = checkStatus.data;
                var ids="";
                for (var i = 0; i < data.length; i++) {
                    ids+=data[i].id+",";
                }
                if(data.length>0){
                    $.ajax({
                        type: "post",
                        url:context +"/callCategory/delete.do",
                        data: {
                            "callCategoryIds":ids
                        },
                        success: function (suc) {
                            if(suc.status==0){
                                layer.msg(suc.message);
                                window.location.href =context +"/callCategory/list.do"
                            }else{
                                layer.msg(suc.message);
                            }
                        }
                    });
                }else{
                    layer.msg("请选择要删除的任务分类！",{
                        time: 5000 //5s后自动关闭
                    });
                }
            });
        });
        //修改操作
        $('#updSubmit').on('click', function () {
            var $form = $("#updForm");
            var params = $form.serialize();
            $.ajax({
                type: "POST",
                url: context +"/callCategory/update.do",
                data: params,
                success: function (suc) {
                    if(suc.status==0){
                        layer.msg(suc.message);
                        window.location.href =context +"/callCategory/list.do"
                    }else{
                        layer.msg(suc.message);
                    }
                }
            });
        });
        /************************左侧树状结构****************************/
        var zTreeObj;
        // zTree 的参数配置，深入使用请参考 API 文档（setting 配置详解）
        var setting = {
            treeId: "",
            treeObj: null,
            view: {
                showLine: true,
                showIcon: false,
                selectedMulti: false,
                dblClickExpand: false
                // addDiyDom: addDiyDom
            },
            data: {
                simpleData: {   //简单的数据源，一般开发中都是从数据库里读取，API有介绍，这里只是本地的
                    enable: true,
                    idKey: "id",  //id和pid，
                    pIdKey: "parentId",
                    rootPId: null   //根节点
                }
            },
            callback: {

                /********************************* 回调函数。单击节点触发事件*****************************************/
                // onClick: zTreeOnClick
            }
        };
        // zTree 的数据属性，深入使用请参考 API 文档（zTreeNode 节点数据详解）
        function showTree(){
            $.ajax({
                type: "GET",
                url: context + "/callCategory/findTree.do",
                data: {},
                success: function (data) {
                    var resu = eval(data.data);
                    zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, resu);
                }
            });
        }
    };
    return {
        init: function () {
            init();
        }

    }

}(jQuery, layui, document)
