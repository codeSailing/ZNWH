package com.quickdone.znwh.controller;

import com.quickdone.znwh.entity.CallContent;
import com.quickdone.znwh.entity.CallContentSubject;
import com.quickdone.znwh.pojo.LayuiRequest;
import com.quickdone.znwh.pojo.LayuiResponseMap;
import com.quickdone.znwh.pojo.PaginationMapLayui;
import com.quickdone.znwh.pojo.ResponseData;
import com.quickdone.znwh.service.CallContentService;
import com.quickdone.znwh.service.CallContentSubjectService;
import com.quickdone.znwh.utils.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * 内容管理相关接口
 *
 * @Author: zhuLong
 * @Date: 2018/7/10 14:54
 */
@Controller
@RequestMapping(value = "/callContent")
public class CallContentController {
    private Logger logger = LoggerFactory.getLogger(CallContentController.class);

    @Resource
    private CallContentService callContentService;
    @Resource
    private CallContentSubjectService callContentSubjectService;

    /**
     * @Description: 内容管理页面
     * @Auther: zhuLong
     * @Date: 2018/7/12 16:49
     * @Param: []
     * @return: org.springframework.web.servlet.ModelAndView
     */
    @RequestMapping(value = "/page.do", method = RequestMethod.GET)
    public ModelAndView page() {
        ModelAndView model = new ModelAndView("/callContent/callContent");
        return model;
    }

    /**
     * @Description: 分页查询内容数据
     * @Auther: zhuLong
     * @Date: 2018/7/11 16:12
     * @Param: [request]
     * @return: com.quickdone.znwh.pojo.LayuiResponseMap
     */
    @RequestMapping(value = "/data.do", method = RequestMethod.GET)
    @ResponseBody
    public LayuiResponseMap contentData(HttpServletRequest request) {
        LayuiRequest layuiRequest = LayuiRequest.fromHttpRequest(request);
        PaginationMapLayui pagination = PaginationMapLayui.formJQueryLayuiTableRequest(layuiRequest);
        callContentService.findData(layuiRequest.getSearchParams(), pagination);
        LayuiResponseMap dtResp = LayuiResponseMap.fromPagination(pagination);
        return dtResp;
    }

    /**
     * @Description: 新增and修改内容
     * @Auther: zhuLong
     * @Date: 2018/7/11 9:07
     * @Param: [callContent]
     * @return: com.quickdone.znwh.pojo.ResponseData
     */
    @RequestMapping(value = "/save.do", method = RequestMethod.POST)
    @ResponseBody
    public ResponseData addContent(CallContent callContent) {
        logger.info("--------------------- 请求 /callContent/save.do ---------------------");
        ResponseData responseData;
        if (StringUtils.isNullOrEmpry(callContent.getTitle())) {
            responseData = ResponseData.getErrorResponse("内容标题不能为空");
        } else if (callContent.getContentSubjectId() == null) {
            responseData = ResponseData.getErrorResponse("内容主题不能为空");
        } else {
            callContent.setUpdateTime(new Date());
            callContentService.save(callContent);
            responseData = ResponseData.getSuccessResponse("保存成功");
        }
        return responseData;
    }

    /**
     * @Description: 删除内容
     * @Auther: zhuLong
     * @Date: 2018/7/11 9:48
     * @Param: [contentIds]
     * @return: com.quickdone.znwh.pojo.ResponseData
     */
    @RequestMapping(value = "/delete.do", method = RequestMethod.POST)
    @ResponseBody
    public ResponseData deleteContent(String contentIds) {
        logger.info("--------------------- 请求 /callContent/delete.do --------------------- contentIds=" + contentIds);
        ResponseData responseData;
        if (!StringUtils.isNullOrEmpry(contentIds)) {
            String[] ids = contentIds.split(",");
            List<CallContent> contentList = new ArrayList<CallContent>();
            for (String id : ids) {
                CallContent callContent = (CallContent) callContentService.findById(Long.valueOf(id));
                if (callContent != null) {
                    contentList.add(callContent);
                }
            }
            callContentService.delete(contentList);
            responseData = ResponseData.getSuccessResponse("删除成功");
        } else {
            responseData = ResponseData.getErrorResponse("请选择需要删除的内容");
        }
        return responseData;
    }

    /**
     * @Description: 修改主题
     * @Auther: zhuLong
     * @Date: 2018/7/13 11:54
     * @Param: [contentIds, subjectId]
     * @return: com.quickdone.znwh.pojo.ResponseData
     */
    @RequestMapping(value = "/updateSubject.do", method = RequestMethod.POST)
    @ResponseBody
    public ResponseData updateSubject(String contentIds, Long subjectId){
        ResponseData responseData;
        if(!StringUtils.isNullOrEmpry(contentIds)){
            CallContentSubject callContentSubject = (CallContentSubject) callContentSubjectService.findById(subjectId);
            if(callContentSubject != null){
                List<CallContent> callContentList = new ArrayList<CallContent>();
                String[] ids = contentIds.split(",");
                for(String contentId : ids){
                    CallContent callContent = (CallContent) callContentService.findById(Long.valueOf(contentId));
                    callContent.setContentSubjectId(subjectId);
                    callContent.setContentSubjectName(callContentSubject.getName());
                    callContent.setUpdateTime(new Date());
                    callContentList.add(callContent);
                }
                callContentService.save(callContentList);
                responseData = ResponseData.getSuccessResponse("修改成功");
            }else{
                responseData = ResponseData.getErrorResponse("无该主题信息");
            }
        }else{
            responseData = ResponseData.getErrorResponse("请选择需要修改主题的内容");
        }
        return responseData;
    }

}
