var taskconfiguration = function ($, layui) {
    function init() {
        // 新增确认
        layui.use(['table', 'form', 'element', 'laypage', 'laydate', 'layer'], function () {
            var table = layui.table
                , form = layui.form
                , element = layui.element
                , laypage = layui.laypage
                , laydate = layui.laydate
                , layer = layui.layer;

            //展示已知数据
            table.render({
                elem: '#content-configuration'
                , url: context + '/customerCallFlow/data.do'  //数据请求路径
                , cols: [[ //标题栏
                    {checkbox: true, field: 'id', title: '全选'}
                    , {field: 'theme', title: '外呼主题', width: "15%",templet: '#theme'}
                    , {field: 'name', title: '客户', width: "10%",}
                    , {field: 'category', title: '任务分类', width: "15%",}
                    , {field: 'taskName', title: '任务名称', width: "15%",}
                    , {field: 'executetime', title: '执行时间', width: "15%",}
                    , {field: 'status', title: '状态', width: "8%", templet: '#status'}
                    , {field: 'result', title: '执行结果', width: "8%",templet:'#result'}
                    , {field: 'callTime', title: '通话时长(s)', width: "10%",}
                ]]
                , skin: 'row' //表格风格
                , even: true
                , page: true //是否显示分页
                , id: 'callTask' //初始化标识id
                // ,limits: [5, 7, 10]
                //,limit: 5 //每页默认显示的数量
                , jump: function (obj) {
                    console.log(obj)
                }
            });
            var $ = layui.$, active = {
                reload: function () {
                    var name = $('#keyword');
                    table.reload('category', {
                        where: {
                            key: {
                                name: $.trim(name.val()),
                            }
                        }
                    });
                }
            };
            /************************刷新table****************************/
            var reloadTable = function () {
                table.reload("callFlow", { //此处是上文提到的 初始化标识id
                });
            };

            $('#search').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
            laydate.render({
                elem: '#time-horizon'
                , range: true
            });


            form.on('submit(add)', function(data){
                // console.log(data.form) //被执行提交的form对象，一般在存在form标签时才会返回
                // console.log(data.field) //当前容器的全部表单字段，名值对形式：{name: value}
                var form = $("#add-form").serialize();
                $.ajax({
                    url:context + '/callTask/add.do',
                    type:'post',
                    data:form,
                    success:function (data) {
                        if(data.status == 0){
                            layer.msg(data.message, {time: 2000, icon: 1});
                            $('#right-content').css("display", "block");
                            $('#add-task').css("display", "none");
                            reloadTable();
                        } else {
                            layer.msg(data.message, {time: 2000, icon: 5});
                        }
                    },
                    error:function () {
                        
                    }
                });
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });


            //更多筛选条件
            $('.more-btn').click(function () {
                if ($('.more-condition').css('display') == "none") {
                    $(this).addClass('down');
                    $('.more-condition').addClass('show');
                } else if ($('.more-condition').hasClass('show')) {
                    $(this).removeClass('down');
                    $('.more-condition').removeClass('show');
                }
            });



        });
    };
    return {
        init: function () {
            init();
        }

    }
}(jQuery, layui, document)

