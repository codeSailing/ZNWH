package com.quickdone.znwh.controller;

import com.quickdone.znwh.entity.CallFlow;
import com.quickdone.znwh.pojo.LayuiRequest;
import com.quickdone.znwh.pojo.LayuiResponseMap;
import com.quickdone.znwh.pojo.PaginationMapLayui;
import com.quickdone.znwh.pojo.ResponseData;
import com.quickdone.znwh.service.CallFlowService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.Map;

/**
 * @Author: zhum
 * @Date: 2018/7/11 10:09
 * @Description:
 */
@Controller
@RequestMapping(value = "/callFlow")
public class CallFlowController {

    private static Logger logger = LoggerFactory.getLogger(CallFlowController.class);
    @Resource
    private CallFlowService callFlowService;

    /**
     * @Author: zhum
     * @Date: 2018/7/11 10:12
     * @Description: 流程列表页面
     */
    @RequestMapping(value = "/list.do", method = RequestMethod.GET)
    public ModelAndView list() {
        logger.info("调用CallFlowController==== list.do");
        ModelAndView mv = new ModelAndView();
        mv.setViewName("");
        return mv;
    }

    /**
     * @Author: zhum
     * @Date: 2018/7/11 9:39
     * @Description: 查询任务列表
     */
    @RequestMapping(value = "/data.do", method = RequestMethod.GET)
    @ResponseBody
    public LayuiResponseMap data(HttpServletRequest request) {
        logger.info("调用CallFlowController==== data.do");
        LayuiRequest layuiRequest = LayuiRequest.fromHttpRequest(request);
        Map<String, Object> searchParams = layuiRequest.getSearchParams();
        PaginationMapLayui pagination = PaginationMapLayui.formJQueryLayuiTableRequest(layuiRequest);
        callFlowService.findAll(searchParams,pagination);
        LayuiResponseMap dtResp = LayuiResponseMap.fromPagination(pagination);
        return dtResp;
    }

    /**
     * @Author: zhum
     * @Date: 2018/7/11 10:46
     * @Description: 新增
     */
    @RequestMapping(value = "/add.do", method = RequestMethod.GET)
    @ResponseBody
    public ResponseData add(HttpServletRequest request, Map<String,Object> params) {
        logger.info("调用CallFlowController==== add.do,  params:=" + params);
        return callFlowService.add(params);
    }

    /**
     * @Author: zhum
     * @Date: 2018/7/11 10:24
     * @Description: 删除
     */
    @RequestMapping(value = "/delete.do", method = RequestMethod.GET)
    @ResponseBody
    public ResponseData delete(Long id) {
        logger.info("调用CallFlowController==== delete.do,  params: id=" + id);
        CallFlow callFlow = (CallFlow) callFlowService.findById(id);
        if (callFlow != null) {
            return callFlowService.delete(callFlow);
        } else {
            return ResponseData.getErrorResponse("流程不存在，操作失败");
        }
    }

    /**
     * @Author: zhum
     * @Date: 2018/7/10 16:10
     * @Description: 修改
     */
    @RequestMapping(value = "/update.do", method = RequestMethod.GET)
    @ResponseBody
    public ResponseData update(HttpServletRequest request, Long id, Map<String,Object> params) {
        logger.info("调用CallFlowController==== update.do,  params: id=" + "id,updateParms:" + params);
        if (params != null) {
            //TODO 修改
            return callFlowService.update(id, params);
        } else {
            return ResponseData.getErrorResponse("操作失败");
        }
    }

    /**
     * @Author: zhum
     * @Date: 2018/7/10 16:10
     * @Description: 复制
     */
    @RequestMapping(value = "/copy.do", method = RequestMethod.GET)
    @ResponseBody
    public ResponseData copy(HttpServletRequest request, Long id) {
        logger.info("调用CallFlowController==== copy.do,  params: id=" + "id");
        //TODO 复制
        return callFlowService.copy(id);
    }
}
